% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CreateParam.R
\name{CreateParam}
\alias{CreateParam}
\title{CreateParam}
\usage{
CreateParam(
  file.name,
  na.codes = c("", "NA", "NULL"),
  hTrait = NULL,
  pTrait = NULL,
  hTreatment = NULL,
  pTreatment = NULL,
  askCompare = "D",
  hNoise = NULL,
  pNoise = NULL,
  hCov = NULL,
  pCov = NULL,
  hInter = NULL,
  pInter = NULL,
  typeInter = NULL,
  ShowInter = NULL,
  hRand = NULL,
  pRand = NULL,
  Seed = 1234,
  iter = 30000,
  burnin = 5000,
  lag = 10
)
}
\arguments{
\item{file.name}{String specifying the path to the data file, which must be in`.csv` or `.xlsx` format}

\item{na.codes}{Character vector specifying how missing values are encoded in the data file. Default codes are `c("", "NA", "NULL")`.}

\item{hTrait}{Vector specifying the names of the traits. Users can specify traits using either hTrait, pTrait or both arguments.}

\item{pTrait}{Vector specifying the column positions in the data file of the traits. Users can specify traits using either hTrait, pTrait or both arguments.}

\item{hTreatment}{Vector specifying the names of the treatment effects. Users can specify treatment effects using either hTreatment, pTreatment or both arguments.}

\item{pTreatment}{Vector specifying the column positions in the data file of the treatment effects. Users can specify treatment effects using either hTreatment, pTreatment or both arguments.}

\item{askCompare}{Character specifying how to compare treatment levels: `"D"`for difference, `"R"` for ratio, or `"NA"` if not applicable. Default is `"D"`.}

\item{hNoise}{Vector specifying the names of the noise effects. Users can specify noise effects using either hNoise, pNoise or both arguments.}

\item{pNoise}{Vector specifying the column positions in the data file of the noise effects. Users can specify noise effects using either hNoise, pNoise or both arguments.}

\item{hCov}{Vector specifying the names of the covariates. Users can specify covariates using either hCov, pCov or both arguments.}

\item{pCov}{Vector specifying the column positions in the data file of the covariates. Users can specify covariates using either hCov, pCov or both arguments.}

\item{hInter}{Matrix of dimensions n x 2 with n being the number of order 2 interactions. Rows specify the names of the components involved in the interactions. Specification can be through either hInter, pInter or both arguments.}

\item{pInter}{Matrix of dimensions n x 2 with n being the number of order 2 interactions. Rows specify column positions in the data file of the components involved in the interactions. Specification can be through either hInter, pInter or both arguments.}

\item{typeInter}{Matrix n x 2 indicating whether components of each interaction are factors (`"F"`) or covariates (`"C"`). Mandatory if `hInter` or `pInter` are not `NULL`.}

\item{ShowInter}{Character vector of length equal to number of interactions indicating how each interaction should be classified, as treatments (`"T"`) or noise (`"N"`). Mandatory if `hInter` or `pInter` are not `NULL`.}

\item{hRand}{Vector specifying the names of the random effects. Users can specify random effects using either hRand, pRand or both arguments.}

\item{pRand}{Vector specifying the column positions in the data file of the random effects. Users can specify random effects using either hRand, pRand or both arguments.}

\item{Seed}{Integer used as a random seed for MCMC sampling to ensure reproducibility.Default is `1234`.}

\item{iter}{Integer specifying the number of MCMC iterations. Default is `30000`.}

\item{burnin}{Integer specifying the number of initial MCMC iterations to be discarded.Default is `5000`.}

\item{lag}{Integer specifying the thinning interval for MCMC sampling. Default is `10`.}
}
\value{
A list of all specified parameters ready for use in subsequent statistical analysis
or modeling. This includes detailed specifications of traits, treatments, noise effects,
covariates, interactions, random effects, and MCMC characteristics.
}
\description{
This function Generates a Parameter Configuration Non-interactively.

This function allows users to specify parameters for a statistical analysis
or modeling through direct arguments, bypassing the interactive process.
It supports defining various model components, including traits, treatments,
noise effects, covariates, interactions, and random effects.
}
\section{Side Effects}{

- The function directly processes the specified parameters without interactive input,
facilitating script-based workflows.
- It reads the specified data file and may stop execution if the file does not exist
or is in an unsupported format.
}

\examples{
\dontrun{
# Example usage :
# Example 1: Basic usage with mandatory parameters (model including only the mean)
param_list_basic <- CreateParam(
 file.name = "~/Dropbox/Rpackages/RabbitR/DataIMF.csv",
 hTrait = c("LW", "IMF", "PFat"))


# Example 2: using column positions instead of header in some arguments
param_list_positions <- CreateParam(
  file.name = "~/Dropbox/Rpackages/RabbitR/DataIMF.csv",
  pTrait = c(5, 7, 8),  # Corresponds to LW, IMF, PFat
  pTreatment = 1,       # Corresponds to AE
  pNoise = 2,           # Corresponds to OP
  pCov = "pH",
  Seed = 2024,
  iter = 30000,
  burnin = 6000,
  lag = 12
)

# Example 3: model with treatment, noise, covariates and random effects
param_list_complex <- CreateParam(
 file.name = "DataIMF.csv",
 hTrait = c("IMF", "PFat"),
 hTreatment = "AE",
 hNoise = "OP",
 hCov = c("pH", "LW"),
 hRand = "Sex",
 Seed = 1234,
 iter = 40000,
 burnin = 8000,
 lag = 20
)
}
}
